package com.example.albbamon;

import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;

import java.util.List;

public class JobAdapter extends RecyclerView.Adapter<JobAdapter.JobViewHolder> {

    private List<JobModel> jobList;
    private OnItemClickListener listener;

    // Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ Ï†ïÏùò (ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï†ÑÎã¨)
    public interface OnItemClickListener {
        void onItemClick(int position);
    }

    // ÌÅ¥Î¶≠ Î¶¨Ïä§ÎÑà ÏÑ§Ï†ï
    public void setOnItemClickListener(OnItemClickListener listener) {
        this.listener = listener;
    }

    public JobAdapter(List<JobModel> jobList) {
        this.jobList = jobList;
    }

    @NonNull
    @Override
    public JobViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_job, parent, false);
        return new JobViewHolder(view, listener);
    }

    @Override
    public void onBindViewHolder(@NonNull JobViewHolder holder, int position) {
        JobModel job = jobList.get(position);
        holder.jobTitle.setText(job.getTitle());

        // üî• Ïª§ÎÆ§ÎãàÌã∞ Í≤åÏãúÍ∏ÄÏù¥Î©¥ subtitle ÌëúÏãú, ÏïÑÎãàÎ©¥ salary ÌëúÏãú
        if (job.getSubtitle() != null) {
            holder.subtitle.setText(job.getSubtitle()); // Ïª§ÎÆ§ÎãàÌã∞ Îç∞Ïù¥ÌÑ∞ (ÏûëÏÑ±Ïûê Ï†ïÎ≥¥)
            holder.salary.setVisibility(View.GONE); // üî• Ïó∞Î¥â Ï†ïÎ≥¥ Ïà®Í∏∞Í∏∞
        } else if (job.getSalary() != null) {
            holder.salary.setText(job.getSalary()); // ÏùºÎ∞ò ÏïåÎ∞î Îç∞Ïù¥ÌÑ∞
            holder.salary.setVisibility(View.VISIBLE); // üî• Ïó∞Î¥â Ï†ïÎ≥¥ ÌëúÏãú
        } else {
            holder.subtitle.setText(""); // Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏùÑ Í≤ΩÏö∞ Îπà Í∞í
            holder.salary.setVisibility(View.GONE); // Í∏∞Î≥∏Ï†ÅÏúºÎ°ú Ïà®ÍπÄ
        }

        // üî• file Í∞íÏù¥ NULLÏù¥Î©¥ Í∏∞Î≥∏ Ïù¥ÎØ∏ÏßÄ(b_logo) ÌëúÏãú
        if (job.getImageUrl() == null || job.getImageUrl().isEmpty()) {
            Log.d("JobAdapter", "‚ùå Ïù¥ÎØ∏ÏßÄ ÏóÜÏùå, Í∏∞Î≥∏ Ïù¥ÎØ∏ÏßÄ ÏÇ¨Ïö©");
            holder.jobImage.setImageResource(R.drawable.b_logo);
        } else {
            Log.d("JobAdapter", "üî• Ïù¥ÎØ∏ÏßÄ Î°úÎìú ÏãúÎèÑ: " + job.getImageUrl());

            Glide.with(holder.itemView.getContext())
                    .load(job.getImageUrl())
                    .placeholder(R.drawable.b_logo) // ‚úÖ Î°úÎî© Ï§ë Í∏∞Î≥∏ Ïù¥ÎØ∏ÏßÄ
                    .error(R.drawable.b_logo) // ‚úÖ ÏóêÎü¨ Ïãú Í∏∞Î≥∏ Ïù¥ÎØ∏ÏßÄ
                    .diskCacheStrategy(DiskCacheStrategy.ALL) // ‚úÖ Ï∫êÏã± ÌôúÏÑ±Ìôî
                    .into(holder.jobImage);
        }

        holder.itemView.setOnClickListener(v -> {
            Log.d("JobAdapter", "üî• ÌÅ¥Î¶≠Îêú ÏïÑÏù¥ÌÖú: " + job.getTitle() + ", ID: " + job.getId());

            if (listener != null) {
                Log.d("JobAdapter", "‚úÖ onItemClick Ïã§Ìñâ");
                listener.onItemClick(position);
            } else {
                Log.e("JobAdapter", "‚ùå onItemClickListenerÍ∞Ä null ÏÉÅÌÉú!");
            }
        });
    }




    @Override
    public int getItemCount() {
        return jobList.size();
    }

    public static class JobViewHolder extends RecyclerView.ViewHolder {
        TextView jobTitle, subtitle, salary; // üî• subtitle Ï∂îÍ∞Ä
        ImageView jobImage;

        public JobViewHolder(@NonNull View itemView, final OnItemClickListener listener) {
            super(itemView);
            jobTitle = itemView.findViewById(R.id.job_title);
            subtitle = itemView.findViewById(R.id.job_subtitle);
            salary = itemView.findViewById(R.id.job_salary);// üî• subtitle ID Ï∂îÍ∞Ä
            jobImage = itemView.findViewById(R.id.job_image);

            // ÏïÑÏù¥ÌÖú ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ ÏÑ§Ï†ï
            itemView.setOnClickListener(v -> {
                if (listener != null) {
                    int position = getAdapterPosition();
                    if (position != RecyclerView.NO_POSITION) {
                        listener.onItemClick(position);
                    }
                }
            });
        }
    }

}
